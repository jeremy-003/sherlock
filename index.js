// This file was generated by MongoGen.js

// Express handles routing and other middleware
const express = require('express');
const app = express();

// Adding a const to allow db connection on openshift
const dbConnectionUrl = process.env.MONGODB_URL || 'mongodb://localhost:27017';

// body-parser handles parsing of request bodies
const bodyParser = require('body-parser');
app.use(bodyParser.json());

// the database front end is mostly static
app.use(express.static('html'))

// Mongo is a document-based database
var MongoClient = require('mongodb').MongoClient;
var ObjectID = require('mongodb').ObjectID;
var db;

// Connect to the db
MongoClient.connect(dbConnectionUrl, (err, client) => {
    if (err) { return console.log(err); }
db = client.db('sherlock');

// handlers

// POST - User
app.post('/users', (req, res) => {
    // Adding _isActive, setting to true, to support soft delete
    req.body['_isActive'] = true;
    db.collection('user').insertOne(req.body, (err, res) => {
        res.json(res);
})});

// GET (list) - User
app.get('/users', (req, res) => {
    db.collection('user').find({"_isActive": true}).toArray((err, results) => {
        res.json(results);
})})

;// GET (detail) - ${model.name}
app.get('/users/:_id', (req, res) => {
    db.collection('user').findOne({
        '_id': ObjectID(req.params._id),
        // constraining to isActive = true to support soft delete
        '_isActive': true
    }, (err, results) => {
        res.json(results)
})});

// PUT - ${model.name}
app.put('/${model.endpoint}/:_id', (req, res) => {
    db.collection('user').updateOne({"_id": ObjectID(req.params._id)}, {$set: req.body}, (err, results) => {
        res.json(results)
})});

    // DELETE - User
    // To support soft delete, we're just updating _isActive
    app.delete('/users/:_id', (req, res) => {
        db.collection('user').updateOne(
            {"_id": ObjectID(req.params._id)},
            {$set: {"_isActive": false}},
            (err, results) => {res.json(results)}
        );
    });


// POST - MySite
app.post('/mySites', (req, res) => {
    // Adding _isActive, setting to true, to support soft delete
    req.body['_isActive'] = true;
    db.collection('mySite').insertOne(req.body, (err, res) => {
        res.json(res);
})});

// GET (list) - MySite
app.get('/mySites', (req, res) => {
    db.collection('mySite').find({"_isActive": true}).toArray((err, results) => {
        res.json(results);
})})

;// GET (detail) - ${model.name}
app.get('/mySites/:_id', (req, res) => {
    db.collection('mySite').findOne({
        '_id': ObjectID(req.params._id),
        // constraining to isActive = true to support soft delete
        '_isActive': true
    }, (err, results) => {
        res.json(results)
})});

// PUT - ${model.name}
app.put('/${model.endpoint}/:_id', (req, res) => {
    db.collection('mySite').updateOne({"_id": ObjectID(req.params._id)}, {$set: req.body}, (err, results) => {
        res.json(results)
})});

    // DELETE - MySite
    // To support soft delete, we're just updating _isActive
    app.delete('/mySites/:_id', (req, res) => {
        db.collection('mySite').updateOne(
            {"_id": ObjectID(req.params._id)},
            {$set: {"_isActive": false}},
            (err, results) => {res.json(results)}
        );
    });

    if (dbConnectionUrl === process.env.MONGODB_URL) {
        app.listen(8080, () => console.log('app started on port 8080'));
    } else {
        app.listen(3000, () => console.log('app started on port 3000'));
    };
    
});

